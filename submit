#!/usr/bin/env bash

set -e

script_path="$( dirname "$0" )"

# NOTE: ENA_TEST_URL is global.
ENA_TEST_URL="https://www-test.ebi.ac.uk/ena/submit/drop-box/submit"

# Import our functions.

source "$script_path"/submit-compat.fun
source "$script_path"/submit-menus.fun
source "$script_path"/submit-xml.fun
source "$script_path"/submit-utils.fun

timestamp="$( date -u +"%F %T" )"

# TODO: Add command line parsing here whenever we know how we want this
# to be used non-interactively.

# NOTE: data_dir is global.
data_dir="$1"

if [[ ! -d "$data_dir" ]]; then
    printf "No such directory: %s\n" "$data_dir" >&2
    exit 1
fi

# This is where we store the retrieved ENA IDs etc.

# NOTE: state_xml is global.
state_xml="$data_dir/state.xml"

if [[ ! -f "$state_xml" ]]; then
    # Initialize the state XML file.

    init_xml "state" |
    add_attr "/state" "created" "$timestamp" |
    add_elem "/state" "files" >"$state_xml"
fi

# Get data from configuration file.  We currently assume that the
# configuration file, config.xml, is available in the current directory.
# We may change this later so that it's picked up from $data_dir
# instead.

# NOTE: These three variables are global.
username="$( get_value "/config/username" <config.xml )"
password="$( get_value "/config/password" <config.xml )"
center_name="$( get_value "/config/center_name" <config.xml )"

# Examine the XML files in $data_dir to figure out what they are.
# Creates the associative array xml_files with file names as keys and
# the top-level XML element as values.

# NOTE: xml_files is global.
declare -A xml_files

for f in "$data_dir"/*.xml; do
    if [[ "$f" == "$state_xml" ]]; then
        continue
    fi

    f_basename="$( basename "$f" )"
    f_type="$( xmlstarlet el "$f" | head -n 1 )"

    xml_files["$f_basename"]="$f_type"
done

# Make sure each XML file is present in the state XML.

for f in "${!xml_files[@]}"; do
    data="$( get_value "//file[@name='$f']" <"$state_xml" )"

    if [[ -z "$data" ]]; then
        # Insert file info into state XML.

        tmpfile=$( mktemp )

        add_elem "//files" "file" <"$state_xml" |
        add_attr "//file[last()]" "name" "$f" >"$tmpfile"

        mv -f "$tmpfile" "$state_xml"
    fi
done

cat <<MESSAGE_END

This is a menu-driven tool for submitting files to the European
Nucleotide Archive (ENA) at EMBL-EBI.

The tool may be exited at any point by pressing <Ctrl>-C, or by choosing
"Exit" at the main menu.

All menus expect numeric input.

MESSAGE_END
main_menu
